openapi: 3.0.1
info:
  title: CalendarApp API
  version: v1
paths:
  /api/Appointments:
    get:
      tags:
        - Appointments
      responses:
        '200':
          description: Success
    post:
      tags:
        - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AppointmentCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AppointmentCreateDto'
      responses:
        '200':
          description: Success
  '/api/Appointments/{id}':
    put:
      tags:
        - Appointments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AppointmentUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AppointmentUpdateDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Appointments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Auth/register:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Success
  /api/Auth/login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
components:
  schemas:
    AppointmentCreateDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        isAllDay:
          type: boolean
        location:
          type: string
          nullable: true
        attendees:
          type: string
          nullable: true
      additionalProperties: false
    AppointmentUpdateDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        isAllDay:
          type: boolean
        location:
          type: string
          nullable: true
        attendees:
          type: string
          nullable: true
      additionalProperties: false
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'Please enter JWT with Bearer into field. Example: Bearer {your token}'
      name: Authorization
      in: header
security:
  - Bearer: [ ]